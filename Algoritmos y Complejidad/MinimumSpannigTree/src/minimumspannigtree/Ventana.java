package minimumspannigtree;

import java.awt.Canvas;
import java.awt.Color;
import java.awt.Graphics;
import java.util.ArrayList;
import java.util.Collections;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author USUARIO
 */
public class Ventana extends javax.swing.JFrame {
ArrayList<String> aris=new ArrayList();
ArrayList<String> aris2=new ArrayList();
ArrayList<String> ver=new ArrayList();
//ArrayList<String> posV=new ArrayList();
//ArrayList<String> arbol=new ArrayList();
ArrayList<Vertice> vertices=new ArrayList();
ArrayList<Arista> aristas=new ArrayList();
boolean sw=false;
    Grafo graph= new Grafo();
    Arbol arbol=new Arbol();
//private Vertice vertice;

    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        canvas1 = new java.awt.Canvas();
        jButton3 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Hallar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Arista:");

        jLabel2.setText("Peso:");

        jButton2.setText("Agregar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jList1.setEnabled(false);
        jScrollPane1.setViewportView(jList1);

        jLabel3.setText("Aristas agregadas:");

        jLabel4.setText("Aristas Arbol de Expansión mínimo:");

        jScrollPane2.setViewportView(jList2);

        jLabel5.setText("Peso:");

        canvas1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jButton3.setText("Agregar/Dibujar Nodos");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel7.setText("Nodos:");

        jButton4.setText("Volver a pintar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel7))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2))
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3))
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4)
                            .addComponent(canvas1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(178, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jButton4)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3))
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)
                                    .addComponent(jButton2))
                                .addGap(18, 18, 18)
                                .addComponent(jButton1)
                                .addGap(14, 14, 14)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(canvas1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(199, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dibujarNodos(Graphics g){
        
//        int y;
//        int x;
        for(int i=0; i<graph.getVertices().size();i++){
//            y=(int)(Math.random()*560+20);
//            x=(int)(Math.random()*560+20);
            g.fillOval(vertices.get(i).getX(), vertices.get(i).getY(), 20, 20);
            g.drawString("["+vertices.get(i).getEtiqueta()+"]", vertices.get(i).getX()+5, vertices.get(i).getY()-10);
//            posV.add(x+","+y);
        }
    }
    
    private void agregarNodos(){       
//        vertices.clear();
//        vertices=graph.getVertices();
        int y;
        int x;
        for(int i=0; i<ver.size();i++){
            Vertice v= new Vertice();
            y=(int)(Math.random()*560+20);
            x=(int)(Math.random()*560+20);
            v.setEtiqueta(ver.get(i));
            v.setX(x);
            v.setY(y);
            vertices.add(v);
            graph.addVertice(v);
        }
    }
    
    private void agregarArista(String ar, int pes){
        Arista a=new Arista();
        a.setName(ar);
        a.setPeso(pes);
        a.setV1(graph.getVertices().get(graph.index(ar.substring(0, 1))));
        a.setV2(graph.getVertices().get(graph.index(ar.substring(1))));
        graph.addArista(a);
    }
    
    private void dibujarArista(Graphics g, int i){
        int x1;
        int y1;
        int x2;
        int y2;
//        x1=graph.getAristas().get(graph.getAristas().size()-1).getV1().getX();
//        y1=graph.getAristas().get(graph.getAristas().size()-1).getV1().getY();
//        x2=graph.getAristas().get(graph.getAristas().size()-1).getV2().getX();
//        y2=graph.getAristas().get(graph.getAristas().size()-1).getV2().getY();
        x1=graph.getAristas().get(i).getV1().getX();
        y1=graph.getAristas().get(i).getV1().getY();
        x2=graph.getAristas().get(i).getV2().getX();
        y2=graph.getAristas().get(i).getV2().getY();
        g.drawLine(x1+10, y1+10, x2+10, y2+10);
        x2=(x1+x2)/2;
        y2=(y1+y2)/2;     
//        g.drawString(graph.getAristas().get(graph.getAristas().size()-1).getPeso()+"", x2, y2);
         g.drawString(graph.getAristas().get(i).getPeso()+"", x2, y2);
    }
    
    private void pintarArbolM(Graphics g){
        int x1;
        int y1;
        int x2;
        int y2;

        for(int i=0; i<arbol.getVertices().size();i++){
            x1=arbol.getVertices().get(i).getX();
            y1=arbol.getVertices().get(i).getY();
            g.setColor(Color.red);
            g.fillOval(x1, y1, 20, 20);
        }
        
        for(int i=0; i<arbol.getAristas().size();i++){
            x1=arbol.getAristas().get(i).getV1().getX();
            y1=arbol.getAristas().get(i).getV1().getY();
            x2=arbol.getAristas().get(i).getV2().getX();
            y2=arbol.getAristas().get(i).getV2().getY();
            g.setColor(Color.red);
            g.drawLine(x1+10, y1+10, x2+10, y2+10);
        }
    }
    public void cambiarCoor(){
        int y;
        int x;
        for(int i=0; i<graph.getVertices().size();i++){
//            Vertice v= new Vertice();
            y=(int)(Math.random()*560+20);
            x=(int)(Math.random()*560+20);
//            v.setEtiqueta(ver.get(i));
            graph.getVertices().get(i).setX(x);
            graph.getVertices().get(i).setY(y);
//            v.setY(y);
//            vertices.add(v);
//            graph.addVertice(v);
        }
    }
    public void limpiar(Graphics g){
        g.clearRect(0, 0, 600, 600);
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Kruskal k =new Kruskal();
        sw=true;
        Bosque bos;
        graph.ordenarVer();
        k.kruskal(graph);
        bos=k.getBosque();
        jLabel6.setText(k.getPeso()+"");
        DefaultListModel modelo = new DefaultListModel();
        for(int i = 0; i<bos.getAristas().size(); i++){
            modelo.addElement(bos.getAristas().get(i).getName());
        }
        jList2.setModel(modelo);
        arbol=bos.getArboles().get(0);
//        graph=bos;
        pintarArbolM(canvas1.getGraphics());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    if(ver.contains(jTextField2.getText().substring(0, 1)) && ver.contains(jTextField2.getText().substring(1, 2))){
        String aux=jTextField2.getText();
        if(!aris2.contains(aux)){
            aris2.add(aux);
            aris.add(aux+" "+jTextField3.getText());
            DefaultListModel modelo = new DefaultListModel();
            modelo.addElement("Arista : Peso");
            for(int i = 0; i<aris.size(); i++){
                modelo.addElement(aris.get(i).split(" ")[0]+" : "+aris.get(i).split(" ")[1]);
            }
            jList1.setModel(modelo);
            agregarArista(jTextField2.getText(), Integer.parseInt(jTextField3.getText()));
            dibujarArista(canvas1.getGraphics(),graph.getAristas().size()-1);
            jTextField2.setText("");
            jTextField3.setText("");
            jTextField2.requestFocus();
            
        }else{
            JOptionPane.showMessageDialog(null, "Arista ya existe");
        }
    }else{
        JOptionPane.showMessageDialog(null, "Al menos uno de los vértices de la arista no fue declarado");
    }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        aris.clear();
        aris2.clear();
//        posV.clear();
        arbol.clear();
        graph.clear();
        ver.clear();
        vertices.clear();
        graph.clear();
        jLabel6.setText("");
        DefaultListModel modelo = new DefaultListModel();
        jList1.setModel(modelo);
        jList2.setModel(modelo);
        Collections.addAll(ver, jTextField1.getText().split(" "));
        limpiar(canvas1.getGraphics());
        agregarNodos();
        dibujarNodos(canvas1.getGraphics());
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        limpiar(canvas1.getGraphics());
        cambiarCoor();
        dibujarNodos(canvas1.getGraphics());
        for(int i=0; i<graph.getAristas().size();i++){
            dibujarArista(canvas1.getGraphics(),i);
        }
        if(sw==true){
        pintarArbolM(canvas1.getGraphics());
        }
        
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Canvas canvas1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
