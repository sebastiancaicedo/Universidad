/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package LabFinal;

import java.awt.*;
import java.awt.event.KeyEvent;

import java.awt.event.KeyListener;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;

/**
 *
 * @author sebastiancaicedo
 */
public class Ventana extends javax.swing.JFrame {

    /**
     * Creates new form Form
     */
    public static Juego juego;
    
    public static int defaultWidth=800;
    public static int defaultHeight=600;
    public static final Sonido sonidoEnter= new Sonido("Click", 0);
    
    public static Escenario escenarioActual= new Escenario(0);
    
    public Ventana() {
        initComponents();
        canvas1.setBackground(Color.black);
        
        //llenar();
        
        Thread motorgrafico = new Thread(new Runnable() {
            
            
            @Override
            public void run() {
                canvas1.createBufferStrategy(2);
                
                while(true){
                    Graphics2D g = (Graphics2D) canvas1.getBufferStrategy().getDrawGraphics();
                    g.clearRect(0, 0, defaultWidth, defaultHeight);
                    
                    
                    escenarioActual.pintar(g);
                    
                    
                    canvas1.getBufferStrategy().show();
                    
                    try {
                        Thread.sleep(50);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
                    }
                
                }
                
            }
            
        });
        
        motorgrafico.start();
        
        canvas1.addKeyListener(new KeyListener() {

            @Override
            public void keyTyped(KeyEvent e) {
                
            }

            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    
                    try {
                        sonidoEnter.Sonar();
                    } catch (UnsupportedAudioFileException ex) {
                        Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (LineUnavailableException ex) {
                        Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                
                escenarioActual.teclaPresionada(e);
            }

            @Override
            public void keyReleased(KeyEvent e) {
                escenarioActual.teclaLevantada(e);
                
            }
        });
         
        
        escenarioActual.sonar();
        canvas1.requestFocus();
    }
    
    public static void actualizarEscenario(Escenario e){
        escenarioActual= e;
        escenarioActual.sonar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        canvas1 = new java.awt.Canvas();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(canvas1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(canvas1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
        
            @Override
            public void run() {
                
                Ventana v = new Ventana();
                v.pack();
                v.setBounds(0, 0, defaultWidth, defaultHeight);
                Dimension dim= Toolkit.getDefaultToolkit().getScreenSize();
                Dimension di= v.getSize();
                v.setLocation((dim.width - di.width)/2,(dim.height - di.height-100)/2);
                v.setVisible(true);
            }
        });
       
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Canvas canvas1;
    // End of variables declaration//GEN-END:variables
}
